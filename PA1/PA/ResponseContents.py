# automatically generated by the FlatBuffers compiler, do not modify

# namespace: PA

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class ResponseContents(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ResponseContents()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsResponseContents(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # ResponseContents
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ResponseContents
    def Code(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ResponseContents
    def Contents(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ResponseContentsStart(builder):
    builder.StartObject(2)

def Start(builder):
    ResponseContentsStart(builder)

def ResponseContentsAddCode(builder, code):
    builder.PrependInt32Slot(0, code, 0)

def AddCode(builder, code):
    ResponseContentsAddCode(builder, code)

def ResponseContentsAddContents(builder, contents):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(contents), 0)

def AddContents(builder, contents):
    ResponseContentsAddContents(builder, contents)

def ResponseContentsEnd(builder):
    return builder.EndObject()

def End(builder):
    return ResponseContentsEnd(builder)
